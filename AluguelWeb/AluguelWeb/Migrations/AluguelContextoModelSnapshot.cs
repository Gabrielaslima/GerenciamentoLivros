// <auto-generated />
using System;
using AluguelWeb.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AluguelWeb.Migrations
{
    [DbContext(typeof(AluguelContexto))]
    partial class AluguelContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_autor");

                    b.Property<string>("Cpf")
                        .HasColumnName("cpf_autor");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_autor");

                    b.HasKey("Id");

                    b.ToTable("autor","dbo_aluguel");
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_cliente");

                    b.Property<string>("Cpf")
                        .HasColumnName("cpf_cliente");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_cliente");

                    b.HasKey("Id");

                    b.ToTable("cliente","dbo_aluguel");
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_editora");

                    b.Property<string>("Cnpj")
                        .HasColumnName("cnpj_editora");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_editora");

                    b.HasKey("Id");

                    b.ToTable("editora","dbo_aluguel");
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_emprestimo");

                    b.Property<int>("ClienteID")
                        .HasColumnName("cd_cliente");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnName("dt_emrpestimo");

                    b.Property<int>("LivroID")
                        .HasColumnName("cd_livro");

                    b.Property<DateTime>("PreviaDevolucao")
                        .HasColumnName("pv_devolucao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.HasIndex("LivroID");

                    b.ToTable("emprestimo","dbo_aluguel");
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cd_livro");

                    b.Property<int>("AutorID")
                        .HasColumnName("cd_autor");

                    b.Property<int>("EditoraID")
                        .HasColumnName("cd_editora");

                    b.Property<string>("Nome")
                        .HasColumnName("nm_livro");

                    b.Property<int>("Status")
                        .HasColumnName("st_livro");

                    b.HasKey("Id");

                    b.HasIndex("AutorID");

                    b.HasIndex("EditoraID");

                    b.ToTable("livro","dbo_aluguel");
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Emprestimo", b =>
                {
                    b.HasOne("AluguelWeb.Models.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AluguelWeb.Models.Entidades.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AluguelWeb.Models.Entidades.Livro", b =>
                {
                    b.HasOne("AluguelWeb.Models.Entidades.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AluguelWeb.Models.Entidades.Editora", "Editora")
                        .WithMany()
                        .HasForeignKey("EditoraID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
